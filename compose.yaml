---
services:
  mtest:
    build:
      context: .
      dockerfile: ./docker-files/Dockerfile.proxy
    container_name: mtest
    image: mtest:latest
    restart: always
    environment:
      MONGODB_URL: mongodb://mtest:mtest@mongo:27017/
    ports:
      - ${PROXY_PORT}:${PROXY_PORT}
      - ${PROXY_WEB_PORT}:${PROXY_WEB_PORT}
      - ${PROXY_WEB_FILE_PORT}:${PROXY_WEB_FILE_PORT}
    volumes:
      - mtest-mitm:/src/.mitmproxy
    depends_on:
      - mongo
      - postgres

  grafana:
    image: grafana/grafana-oss:9.0.1
    restart: always
    container_name: grafana
    ports:
      - ${GRAFANA_PORT}:3000
    volumes:
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/config.ini:/etc/grafana/grafana.ini
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources/
    depends_on:
      - postgres

  postgres:
    image: postgres
    container_name: postgres
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data

  adminer:
    image: adminer
    container_name: adminer
    restart: always
    environment:
      ADMINER_DESIGN: "nette"
    ports:
      - ${ADMINER_PORT}:8080
    depends_on:
      - postgres

  mongo:
    image: mongo
    container_name: mongo
    restart: always
    volumes:
      - mongo-data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: mtest
      MONGO_INITDB_ROOT_PASSWORD: mtest

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: mtest
      ME_CONFIG_MONGODB_ADMINPASSWORD: mtest
      ME_CONFIG_MONGODB_URL: mongodb://mtest:mtest@mongo:27017/
    depends_on:
      - mongo

volumes:
  mtest-mitm:
  mongo-data:
  postgres-data:
  grafana-data:

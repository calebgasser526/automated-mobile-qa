version: "3"

vars:
  MONGODB_USER: mtest
  MONGODB_PASSWORD: mtest
  MONGODB_PORT: 27017
  MONGODB_HOST: mongo
  MONGODB_URL: "mongodb://{{.MONGODB_USER}}:{{.MONGODB_PASSWORD}}@{{.MONGODB_HOST}}:{{.MONGODB_PORT}}"

tasks:
  lima:install:
    desc: Install lima. Needed for running containers.
    cmds:
      - brew install lima
    status:
      - command -v limactl
    preconditions:
      - sh: command -v brew
        msg: |
          Brew not installed. Did you run the bootstrap script? "./hack/bootstrap.sh"

  lima:start:
    deps: [lima:install]
    desc: Start lima.
    cmds:
      - limactl start --tty=false
    status:
      - '[[ $(limactl list | tr -s '' '' | awk ''$2=="Running"{print $2}'') ]]'

  lima:stop:
    deps: [lima:install]
    desc: Stop lima.
    cmds:
      - limactl stop
    status:
      - '[[ $(limactl list | tr -s '' '' | awk ''$2=="Stopped"{print $2}'') ]]'

  lima:rm:
    deps: [lima:stop]
    desc: Delete lima instance.
    cmds:
      - limactl delete default

  lima:shell:
    deps: [lima:start]
    desc: Enter lima shell.
    cmds:
      - limactl shell default

  lima:restart:
    deps: [lima:install]
    desc: Delete and restart the instance.
    cmds:
      - task: lima:stop
      - task: lima:rm
      - task: lima:start

  ps:
    deps: [lima:start]
    desc: List running containers.
    cmds:
      - lima nerdctl ps
    preconditions:
      - sh: '[[ $(limactl list | tr -s '' '' | awk ''$2=="Running"{print $2}'') ]]'
        msg: "Lima not started."

  proxy:
    deps: [lima:start]
    desc: Build and run the proxy container.
    cmds:
      - task: proxy:build
      - task: proxy:run

  proxy:sh:
    deps: [lima:start]
    desc: Drop into a shell inside the proxy container.
    cmds:
      - lima nerdctl run -it mtest bash
    preconditions:
      - sh: lima nerdctl image ls -q
        msg: |
          Images doesn't appear to be present. Did you run `task container:proxy:build`?

  proxy:rebuild:
    deps: [lima:start]
    desc: Destroy running containers and rebuild the project.
    cmds:
      - task: destroy
      - task: proxy:build

  proxy:build:
    deps: [lima:start]
    desc: Build proxy project container.
    cmds:
      - task: down
      - lima nerdctl build --build-arg ANDROID_APK={{.ANDROID_APK}} --build-arg IOS_APP={{.IOS_APP}} --build-arg PROXY_WEB_FILE_PORT={{.PROXY_WEB_FILE_PORT}} --build-arg PROXY_PORT={{.PROXY_PORT}} --build-arg PROXY_WEB_PORT={{.PROXY_WEB_PORT}} -t mtest -f {{.PROJECT_DIR}}/docker-files/Dockerfile.proxy .

  proxy:run:
    deps: [lima:start]
    desc: Run the mtest container.
    cmds:
      - lima nerdctl compose --env-file {{.CONFIG_FILE}} -f {{.PROJECT_DIR}}/compose.yaml up mtest -d --build

  proxy:rm:
    deps: [lima:start]
    desc: Destory the mtest container.
    cmds:
      - lima nerdctl container rm mtest

  build:debug:
    deps: [lima:start]
    desc: Build project container (with debugging.)
    cmds:
      - task: down
      - lima nerdctl build -t mtest {{.PROJECT_DIR}} --debug-full

  up:build:
    deps: [lima:start]
    desc: Spin up project compose file and build containers.
    cmds:
      - task: down
      - lima nerdctl compose --env-file {{.CONFIG_FILE}} -f {{.PROJECT_DIR}}/compose.yaml up -d --build

  up:build:debug:
    deps: [lima:start]
    desc: Spin up project compose file and build containers (with debugging.)
    cmds:
      - task: down
      - lima nerdctl compose --env-file {{.CONFIG_FILE}} -f {{.PROJECT_DIR}}/compose.yaml up -d --build --debug-full

  up:
    deps: [lima:start]
    desc: Spin up project compose file.
    cmds:
      - task: down
      - lima nerdctl compose --env-file {{.CONFIG_FILE}} -f {{.PROJECT_DIR}}/compose.yaml up -d
      - task: dashboard

  up:debug:
    deps: [lima:start]
    desc: Spin up project compose file (with debugging.)
    cmds:
      - lima nerdctl compose --env-file {{.CONFIG_FILE}} -f {{.PROJECT_DIR}}/compose.yaml up -d --debug-full

  down:
    deps: [lima:start]
    desc: Remove containers and networks created by project compose file.
    cmds:
      - lima nerdctl compose --env-file {{.CONFIG_FILE}} -f {{.PROJECT_DIR}}/compose.yaml down

  destroy:
    deps: [lima:start]
    desc: Remove containers, networks, and volumes created by project compose file.
    cmds:
      - lima nerdctl compose --env-file {{.CONFIG_FILE}} -f {{.PROJECT_DIR}}/compose.yaml down -v

  check:
    desc: Check if containers are running.
    cmds:
      - ./hack/check-running-container.sh

  dashboard:
    deps: [check]
    desc: Open grafana dashboard.
    cmds:
      - open "http://localhost:{{.GRAFANA_PORT}}/?orgId=1&kiosk"
